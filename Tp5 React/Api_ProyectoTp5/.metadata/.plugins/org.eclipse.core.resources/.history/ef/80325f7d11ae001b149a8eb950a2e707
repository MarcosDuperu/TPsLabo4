package com.proyecto.react.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.proyecto.react.entity.Instrumento;
import com.proyecto.react.service.InstrumentoServiceImpl;

@RestController
public class InstrumentoController {

	@Autowired
	protected InstrumentoServiceImpl service;
	
	@GetMapping("/instrumento")
	public ResponseEntity<?> listarNoticias() {
		return ResponseEntity.ok().body(service.findAll());
	}

	
	@GetMapping("/instrumento/{id}")
	public ResponseEntity<?> mostrarNoticia(@PathVariable long id){
		Optional<Instrumento> o = service.findById(id);
		if(o.isEmpty()) {
			return ResponseEntity.notFound().build();
		}
		return ResponseEntity.ok(o.get());
	}
	
	@PostMapping("/instrumento")
	public ResponseEntity<?> crearInstrumento (@RequestBody Instrumento instrumento) {
		Instrumento instrumentoDB = service.save(instrumento);
		return ResponseEntity.status(HttpStatus.CREATED).body(instrumentoDB);
	}
	
	@DeleteMapping("/noticia/{id}")
	public ResponseEntity<?> eliminarInstrumento (@PathVariable Long id) {
		service.deleteById(id);
		return ResponseEntity.noContent().build();
	}
	@PutMapping("/noticia/{id}")
	public ResponseEntity<?> editarNoticia (@RequestBody Instrumento instrumento, @PathVariable Long id) {
		Optional<Instrumento> o = service.findById(id);
		if(o.isEmpty()) {
			return ResponseEntity.notFound().build();
		}
		Instrumento instrumentoDB = o.get();
		instrumentoDB.setTituloNoticia(instrumento.getTituloNoticia());
		instrumentoDB.setResumenNoticia(instrumento.getResumenNoticia());
		instrumentoDB.setFoto(instrumento.getFoto());
		instrumentoDB.setContHtml(instrumento.getContHtml());
		instrumentoDB.setPublicada(instrumento.getPublicada());
		instrumentoDB.setFecha(instrumento.getFecha());
		
		return ResponseEntity.status(HttpStatus.CREATED).body(service.save(instrumentoDB));
	}
	
	
}
